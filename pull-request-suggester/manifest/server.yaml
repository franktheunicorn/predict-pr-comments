apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    run: pr-suggester
    app: pr-suggester
  name: pr-suggester
  namespace: nova
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: pr-suggester
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: pr-suggester
    spec:
      containers:
        - image: krisnova/pull-request-suggester
          imagePullPolicy: Always
          name: pr-suggester
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          ports:
            - containerPort: 80
          command: ["/go/bin/prs"]
          args: ["--hostname", "model-server", "--port", "777", "--username", "frank-theunicorn", "--password", ""]
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: pr-suggester
  name: pr-suggester
  namespace: nova
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    run: pr-suggester
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: fabulousaf
  namespace: nova
spec:
  rules:
    - host: fabulous.af
      http:
        paths:
          - path: /webhook
            backend:
              serviceName: pr-suggester
              servicePort: 80
          - path: /auth
            backend:
              serviceName: pr-suggester
              servicePort: 80
